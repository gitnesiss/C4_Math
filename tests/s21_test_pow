#test POW
long double base = 0;
long double exp = 0;
base = -10.1261;
exp = -0.72;
ck_assert_double_nan(s21_pow(base, exp));
ck_assert_double_nan(pow(base, exp));
base = +0;
exp = -0.33;
ck_assert_ldouble_infinite(s21_pow(base, exp));
ck_assert_ldouble_infinite(pow(base, exp));
base = -0;
exp = -0.33;
ck_assert_ldouble_infinite(s21_pow(base, exp));
ck_assert_ldouble_infinite(pow(base, exp));
base = -0;
exp = INFINITY;
ck_assert_ldouble_eq_tol(s21_pow(base, exp), pow(base, exp), S21_EPS);
base = +0;
exp = 123;
ck_assert_ldouble_eq_tol(s21_pow(base, exp), pow(base, exp), 1e-6);
base = -0;
exp = 123;
ck_assert_ldouble_eq_tol(s21_pow(base, exp), pow(base, exp), 1e-6);
base = -0;
exp = INFINITY;
ck_assert_ldouble_eq_tol(s21_pow(base, exp), pow(base, exp), 1e-6);
base = -1;
exp = INFINITY;
ck_assert_ldouble_eq_tol(s21_pow(base, exp), pow(base, exp), 1e-6);
base = -1;
exp = NAN;
ck_assert_double_nan(pow(base, exp));
ck_assert_double_nan(s21_pow(base, exp));
base = NAN;
exp = 0;
ck_assert_ldouble_eq_tol(s21_pow(base, exp), pow(base, exp), 1e-6);
base = -123;
exp = NAN;
ck_assert_double_nan(s21_pow(base, exp));
ck_assert_double_nan(pow(base, exp));
base = 0.5591951;
exp = -INFINITY;
ck_assert_ldouble_infinite(pow(base, exp));
ck_assert_ldouble_infinite(s21_pow(base, exp));
base = 1.5591951;
exp = -INFINITY;
ck_assert_ldouble_eq_tol(s21_pow(base, exp), pow(base, exp), 1e-6);
base = 0.5591951;
exp = INFINITY;
ck_assert_ldouble_eq_tol(s21_pow(base, exp), pow(base, exp), 1e-6);
base = 1.5591951;
exp = INFINITY;
ck_assert_ldouble_infinite(s21_pow(base, exp));
ck_assert_ldouble_infinite(pow(base, exp));
base = -INFINITY;
exp = -193491;
ck_assert_ldouble_eq_tol(s21_pow(base, exp), pow(base, exp), 1e-6);
base = -INFINITY;
exp = -142;
ck_assert_ldouble_eq_tol(s21_pow(base, exp), pow(base, exp), 1e-6);
base = -INFINITY;
exp = 141;
ck_assert_ldouble_infinite(s21_pow(base, exp));
ck_assert_ldouble_infinite(pow(base, exp));
base = -INFINITY;
exp = 142;
ck_assert_ldouble_infinite(s21_pow(base, exp));
ck_assert_ldouble_infinite(pow(base, exp));
base = INFINITY;
exp = -1;
ck_assert_ldouble_eq_tol(s21_pow(base, exp), pow(base, exp), 1e-6);
base = INFINITY;
exp = 1;
ck_assert_ldouble_infinite(s21_pow(base, exp));
ck_assert_ldouble_infinite(pow(base, exp));
base = -INFINITY;
exp = 0.5;
ck_assert_ldouble_infinite(s21_pow(base, exp));
ck_assert_ldouble_infinite(pow(base, exp));

ck_assert_ldouble_eq_tol(s21_pow(0.0, 0.0), pow(0.0, 0.0), 1e-6);
ck_assert_ldouble_eq_tol(s21_pow(-1, 4), pow(-1, 4), 1e-6);
ck_assert_ldouble_eq_tol(s21_pow(2, 18), pow(2, 18), 1e-6);
ck_assert_ldouble_eq_tol(s21_pow(2.1, 11), pow(2.1, 11), 1e-6);
ck_assert_ldouble_eq_tol(s21_pow(1.23456e-7, 2.21), pow(1.23456e-7, 2.21),
                        1e-6);
ck_assert_ldouble_eq_tol(s21_pow(2.1234567, -2), pow(2.1234567, -2), 1e-6);
ck_assert_ldouble_eq_tol(s21_pow(9.99999999e3, 9.95e-4),
                        pow(9.99999999e3, 9.95e-4), 1e-6);
exp = -12;
ck_assert_ldouble_infinite(s21_pow(+0, exp));
ck_assert_ldouble_infinite(pow(+0, exp));
exp = -12;
ck_assert_ldouble_infinite(s21_pow(-0, exp));
ck_assert_ldouble_infinite(pow(-0, exp));
exp = 0;
ck_assert_ldouble_eq_tol(s21_pow(-0, exp), pow(-0, exp), 1e-6);
exp = NAN;
ck_assert_double_nan(s21_pow(+0, exp));
ck_assert_double_nan(pow(+0, exp));
exp = 2.456;
ck_assert_ldouble_eq_tol(s21_pow(+0, exp), pow(+0, exp), 1e-6);
exp = -INFINITY;
ck_assert_ldouble_infinite(s21_pow(+0, exp));
ck_assert_ldouble_infinite(pow(+0, exp));
exp = 56;
ck_assert_ldouble_eq_tol(s21_pow(+0, exp), pow(+0, exp), 1e-6);
exp = 56;
ck_assert_ldouble_eq_tol(s21_pow(-0, exp), pow(-0, exp), 1e-6);
exp = 56.345;
ck_assert_ldouble_eq_tol(s21_pow(-0, exp), pow(-0, exp), 1e-6);
exp = INFINITY;
ck_assert_ldouble_eq_tol(s21_pow(-1, exp), pow(-1, exp), 1e-6);
exp = -INFINITY;
ck_assert_ldouble_eq_tol(s21_pow(-1, exp), pow(-1, exp), 1e-6);
exp = NAN;
ck_assert_ldouble_eq_tol(s21_pow(+1, exp), pow(+1, exp), 1e-6);
exp = -0;
ck_assert_ldouble_eq_tol(s21_pow(4567, exp), pow(4567, exp), 1e-6);
exp = +0;
ck_assert_ldouble_eq_tol(s21_pow(34567, exp), pow(34567, exp), 1e-6);
exp = -0;
ck_assert_ldouble_eq_tol(s21_pow(NAN, exp), pow(NAN, exp), 1e-6);
exp = +0;
ck_assert_ldouble_eq_tol(s21_pow(NAN, exp), pow(NAN, exp), 1e-6);
exp = NAN;
ck_assert_double_nan(s21_pow(NAN, exp));
ck_assert_double_nan(pow(NAN, exp));
exp = INFINITY;
ck_assert_ldouble_infinite(s21_pow(INFINITY, exp));
ck_assert_ldouble_infinite(pow(INFINITY, exp));
exp = -INFINITY;
ck_assert_ldouble_eq_tol(s21_pow(-INFINITY, exp), pow(-INFINITY, exp), 1e-6);
exp = INFINITY;
ck_assert_ldouble_infinite(s21_pow(-INFINITY, exp));
ck_assert_ldouble_infinite(pow(-INFINITY, exp));
exp = 3;
ck_assert_ldouble_eq_tol(s21_pow(-3, exp), pow(-3, exp), 1e-6);
exp = -3;
ck_assert_ldouble_eq_tol(s21_pow(-3, exp), pow(-3, exp), 1e-6);
exp = -3;
ck_assert_ldouble_eq_tol(s21_pow(3, exp), pow(3, exp), 1e-6);
exp = 3;
ck_assert_ldouble_eq(s21_pow(3, exp), pow(3, exp));
ck_assert_ldouble_eq(s21_pow(1, 3.3), pow(1, 3.3));
ck_assert_ldouble_eq(s21_pow(3, -1), pow(3, -1));
ck_assert_ldouble_eq(s21_pow(3.3, 0), pow(3.3, 0));
